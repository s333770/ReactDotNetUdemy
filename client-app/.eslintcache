[{"C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\index.tsx":"1","C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\app\\layout\\App.tsx":"2","C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\features\\nav\\NavBar.tsx":"3","C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"4","C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"5","C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"6","C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"7"},{"size":285,"mtime":1612728586464,"results":"8","hashOfConfig":"9"},{"size":1939,"mtime":1613141424731,"results":"10","hashOfConfig":"9"},{"size":683,"mtime":1612882240083,"results":"11","hashOfConfig":"9"},{"size":1728,"mtime":1613140733245,"results":"12","hashOfConfig":"9"},{"size":1285,"mtime":1612858182483,"results":"13","hashOfConfig":"9"},{"size":1280,"mtime":1612882811445,"results":"14","hashOfConfig":"9"},{"size":2749,"mtime":1613141088069,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"pdecc7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\index.tsx",[],["33","34"],"C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["35","36","37"],"import React, { useState } from \"react\";\r\nimport { Grid, GridColumn, List } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { ActivityDetails } from \"../details/ActivityDetails\";\r\nimport { ActivityForm } from \"../form/ActivityForm\";\r\nimport { ActivityList } from \"./ActivityList\";\r\n\r\ninterface IProps {\r\n  activities: IActivity[];\r\n  selectActivity: (id: string) => void;\r\n  selectedActivity: IActivity | null;\r\n  editMode: boolean;\r\n  setEditMode: (editMode: boolean) => void;\r\n  setSelectedActivity: (activity: IActivity | null) => void;\r\n  createActivity: (activity: IActivity) => void;\r\n  editActivity: (activity: IActivity) => void;\r\n}\r\n\r\nexport const ActivityDashboard: React.FunctionComponent<IProps> = ({\r\n  activities,\r\n  selectActivity,\r\n  selectedActivity,\r\n  editMode,\r\n  setEditMode,\r\n  setSelectedActivity,\r\n  createActivity,\r\n  editActivity,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <ActivityList\r\n            activities={activities}\r\n            selectActivity={selectActivity}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n          {selectedActivity && !editMode && (\r\n            <ActivityDetails\r\n              activity={selectedActivity}\r\n              setEditMode={setEditMode}\r\n              setSelectedActivity={setSelectedActivity}\r\n            />\r\n          )}\r\n          {editMode && (\r\n            <ActivityForm\r\n              setEditMode={setEditMode}\r\n              activity={selectedActivity!}\r\n              createActivity={createActivity}\r\n              editActivity={editActivity}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["38"],"import React from \"react\";\r\nimport { Card, Image, Icon, Button } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\n\r\ninterface IProps {\r\n  activity: IActivity;\r\n  setEditMode: (editMode: boolean) => void;\r\n  setSelectedActivity: (activity: IActivity | null) => void;\r\n}\r\n\r\nexport const ActivityDetails: React.FC<IProps> = ({\r\n  activity,\r\n  setEditMode,\r\n  setSelectedActivity,\r\n}) => {\r\n  return (\r\n    <Card fluid>\r\n      <Image\r\n        src={`/assets/categoryImages/${activity.category}.jpg`}\r\n        wrapped\r\n        ui={false}\r\n      />\r\n      <Card.Content>\r\n        <Card.Header>{activity.title}</Card.Header>\r\n        <Card.Meta>\r\n          <span>{activity.date}</span>\r\n        </Card.Meta>\r\n        <Card.Description>{activity.description}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Button.Group widths={2}>\r\n          <Button\r\n            onClick={() => setEditMode(true)}\r\n            basic\r\n            color=\"blue\"\r\n            content=\"Edit\"\r\n          />\r\n          <Button\r\n            onClick={() => setSelectedActivity(null)}\r\n            basic\r\n            color=\"grey\"\r\n            content=\"Cancel\"\r\n          />\r\n        </Button.Group>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n","C:\\Users\\Andreas\\Documents\\React-DotNetCore-Project\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"47","line":2,"column":16,"nodeType":"45","messageId":"46","endLine":2,"endColumn":26},{"ruleId":"43","severity":1,"message":"48","line":2,"column":28,"nodeType":"45","messageId":"46","endLine":2,"endColumn":32},{"ruleId":"43","severity":1,"message":"49","line":2,"column":23,"nodeType":"45","messageId":"46","endLine":2,"endColumn":27},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'GridColumn' is defined but never used.","'List' is defined but never used.","'Icon' is defined but never used.","no-global-assign","no-unsafe-negation"]